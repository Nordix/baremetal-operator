apiVersion: apps/v1
kind: Deployment
metadata:
  name: ironic-common
spec:
  selector:
    matchLabels:
      name: ironic-common
  template:
    metadata:
      labels:
        name: ironic-common
    spec:
      hostNetwork: true
      containers:
      - name: ironic-dnsmasq
        image: quay.io/metal3-io/ironic
        imagePullPolicy: Always
        securityContext:
          # Must be true so dnsmasq may get the capabilities via file caps
          # KEP: https://github.com/kubernetes/enhancements/blob/master/keps/sig-security/2763-ambient-capabilities/README.md
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_ADMIN
            - NET_BIND_SERVICE
            - NET_RAW
          privileged: false
          runAsUser: 997 # ironic
          runAsGroup: 994 # ironic
        command:
        - /bin/rundnsmasq
        livenessProbe:
          exec:
            command: ["sh", "-c", "ss -lun | grep :67 && ss -lun | grep :69"]
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          exec:
            command: ["sh", "-c", "ss -lun | grep :67 && ss -lun | grep :69"]
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
      volumes:
      - name: ironic-data-volume
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 994
